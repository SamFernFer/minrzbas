[
    // Include
    {
        "title": "Include",
        "in": {
            "args": [
                // Include directory for libclang.
                "-Iinclude",
                "--isystem=sys",
                "--input=include/Includes.hpp",
                "-I../generalProject1/include",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "Includes.json"
    },
    {
        "in": {
            "args": [
                // Include directory for libclang.
                "-Iinclude",
                "--isystem=sys",
                "--input=include/RelIncludes.hpp",
                "-I../generalProject1/include",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "RelIncludes.json"
    },
    {
        "in": {
            "args": [
                // Include directory for libclang.
                "-Iinclude",
                "--isystem=sys",
                "--input=include/RelIndirectIncludes.hpp",
                "-I../generalProject1/include",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "RelIndirectIncludes.json"
    },
    {
        "in": {
            "args": [
                // Include directory for libclang.
                "-Iinclude",
                "-Isys",
                "--input=include/MultipleIncludeDirs.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "MultipleIncludeDirs.json"
    },
    // Define
    {
        // All the cases in this section should have the exact same result.
        "title": "Define",
        "in": {
            "args": [
                // No include directories.
                "-DFENTON_UNDECLARED",
                "--input=include/Define.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "Define.json"
    },
    {
        "in": {
            "args": [
                // One normal include directory.
                "-Iinclude",
                "-DFENTON_UNDECLARED",
                "--input=include/Define.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "Define.json"
    },
    {
        "in": {
            "args": [
                // One normal and one system include directory.
                "-Iinclude",
                "--isystem=sys",
                "-DFENTON_UNDECLARED",
                "--input=include/Define.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "Define.json"
    },
    {
        "in": {
            "args": [
                // Two normal include directories.
                "-Iinclude",
                "-Isys",
                "-DFENTON_UNDECLARED",
                "--input=include/Define.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "Define.json"
    },
    // MultipleDefines
    {
        // All the cases in this section should have the exact same result as the previous 
        // section.
        "title": "MultipleDefines",
        "in": {
            "args": [
                // No include directories.
                "-DFENTON_UNDECLARED1",
                "-DFENTON_UNDECLARED2",
                "--input=include/MultipleDefines.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "Define.json"
    },
    {
        "in": {
            "args": [
                // One normal include directory.
                "-Iinclude",
                "-DFENTON_UNDECLARED1",
                "-DFENTON_UNDECLARED2",
                "--input=include/MultipleDefines.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "Define.json"
    },
    {
        "in": {
            "args": [
                // One normal and one system include directory.
                "-Iinclude",
                "--isystem=sys",
                "-DFENTON_UNDECLARED1",
                "-DFENTON_UNDECLARED2",
                "--input=include/MultipleDefines.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "Define.json"
    },
    {
        "in": {
            "args": [
                // Two normal include directories.
                "-Iinclude",
                "-Isys",
                "-DFENTON_UNDECLARED1",
                "-DFENTON_UNDECLARED2",
                "--input=include/MultipleDefines.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "Define.json"
    },
    // Bases
    {
        "title": "Base",
        "in": {
            "args": [
                // Include directory for libclang.
                "-Iinclude",
                "--input=include/Bases.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "Bases.json"
    },
    // NestedClass
    {
        "title": "NestedClass",
        "in": {
            "args": [
                // Include directory for libclang.
                "-I=.",
                "--input=NestedClass.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1/include"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "NestedClass.json"
    },
    // Unions
    {
        "title": "Unions",
        "in": {
            "args": [
                // Include directory for libclang.
                "-I=.",
                "--input=Unions.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1/include"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "Unions.json"
    },
    // Classes
    {
        "title": "Classes",
        "in": {
            "args": [
                // Include directory for libclang.
                "-I=.",
                "--input=Classes.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1/include"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "Classes.json"
    },
    // Structs
    {
        "title": "Structs",
        "in": {
            "args": [
                // Include directory for libclang.
                "-I=.",
                "--input=Structs.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1/include"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "Structs.json"
    },
    // Enums
    {
        "title": "Enums",
        "in": {
            "args": [
                // Include directory for libclang.
                "-I=.",
                "--input=Enums.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1/include"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "Enums.json"
    },
    // Fields
    {
        "title": "Fields",
        "in": {
            "args": [
                // Include directory for libclang.
                "-Iinclude",
                "--input=include/Fields.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "Fields.json"
    },
    // Variables
    {
        "title": "Variables",
        "in": {
            "args": [
                // Include directory for libclang.
                "-Iinclude",
                "--input=include/Variables.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "Variables.json"
    },
    // Functions
    {
        "title": "Functions",
        "in": {
            "args": [
                // Include directory for libclang.
                "-I=.",
                "--input=Functions.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1/include"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "Functions.json"
    },
    // Methods
    {
        "title": "Methods",
        "in": {
            "args": [
                // Include directory for libclang.
                "-I=.",
                "--input=Methods.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1/include"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "Methods.json"
    },
    // Namespaces
    {
        "title": "Namespaces",
        "in": {
            "args": [
                // Include directory for libclang.
                "-I=.",
                "--input=Namespaces.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1/include"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "Namespaces.json"
    },
    // Constructors
    {
        "title": "Constructors",
        "in": {
            "args": [
                // Include directory for libclang.
                "-I=.",
                "--input=Constructors.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1/include"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "Constructors.json"
    },
    // Destructors
    {
        "title": "Destructors",
        "in": {
            "args": [
                // Include directory for libclang.
                "-I=.",
                "--input=Destructors.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1/include"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "Destructors.json"
    },
    // Aliases
    {
        "title": "Aliases",
        "in": {
            "args": [
                // Include directory for libclang.
                "-I=.",
                "--input=Aliases.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1/include"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "Aliases.json"
    },
    // (skipped) Attributes - Bases
    {
        "title": "Attributes - Bases",
        // "in": {
        //     "args": [
        //         // Include directory for libclang.
        //         "-I=.",
        //         "--input=AttributesBases.hpp",
        //         "--",
        //         "--std=c++23"
        //     ],
        //     // The working directory inside "resources" to use when calling libclang.
        //     "cwd": "proj1/include"
        // },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "AttributesBases.json"
    },
    // Attributes - NestedClass
    {
        "title": "Attributes - NestedClass",
        "in": {
            "args": [
                // Include directory for libclang.
                "-I=.",
                "--input=AttributesNestedClass.hpp",
                "--",
                "--std=c++23"
            ],
            // The working directory inside "resources" to use when calling libclang.
            "cwd": "proj1/include"
        },
        // The expected output JSON file inside the "resources/expected" directory.
        "out": "AttributesNestedClass.json"
    }
]